{"version":3,"sources":["utils/storage.js","services/exposureService.js","services/loginService.js","utils/role.js","context/auth.js","context/expService.js","helpers/PrivateRoute.js","helpers/Distributor.js","reusable/Notification.js","components/Auth/LoginForm.js","pages/AuthPage.js","reusable/ActionButton.js","services/formatService.js","helpers/ErrorComponent.js","reusable/ErrorBoundary.js","reusable/Confirmation.js","components/PlanList/ListOfPlans.js","reusable/Select.js","components/PlanList/PlanCreationForm.js","reusable/HocLoader.js","pages/PlanListPage.js","components/PlanDetails/RateBlock.js","reusable/ProgressBar.js","reusable/ComponentAvailability.js","reusable/CalendarSingle.js","components/PlanDetails/AdaptationPlanCard.js","reusable/Calendar.js","components/TaskBlock/TaskComponent.js","components/TaskBlock/TaskCreationForm.js","reusable/Loader.js","components/TaskBlock/TasksBlock.js","components/CommentBlock/Comment.js","components/CommentBlock/CommentBlock.js","pages/PlanDetailsPage.js","components/Header/UserCard.js","components/Header/Header.js","App.js","index.js"],"names":["key","item","window","localStorage","getItem","JSON","parse","jsonItem","stringify","setItem","removeItem","getRequestConfig","params","token","storage","headers","Authorization","getData","path","a","axios","get","res","postData","data","post","putData","put","deleteData","delete","getAll","collection","docName","id","getAllTasksFromPlan","getAllCommentsFromPlan","create","newObject","update","remove","login","userData","AuthContext","createContext","useAuth","useContext","ExpServiceContext","useExpService","PrivateRoute","children","roles","rest","location","useLocation","includes","role","to","pathname","state","from","Distributor","useState","planId","setPlanId","exposureService","user","useEffect","then","plan","plans","notify","type","message","event","CustomEvent","detail","document","dispatchEvent","Notification","open","setOpen","notification","setNotification","notificationListener","addEventListener","removeEventListener","handleClose","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","Alert","elevation","severity","useStyles","makeStyles","theme","title","textAlign","fontWeight","container","height","display","alignItems","LoginForm","username","setUsername","password","setPassword","error","setError","errorText","setErrorText","handleSubmit","e","preventDefault","Container","className","maxWidth","onSubmit","Grid","justify","spacing","xs","Typography","variant","gutterBottom","TextField","label","value","onChange","target","required","fullWidth","helperText","autoComplete","sm","Button","color","AuthPage","setUser","loginService","history","useHistory","replace","btnText","marginLeft","sendFab","margin","textTransform","backgroundColor","palette","common","white","primary","main","transition","ActionButton","handler","text","innerIcon","classes","trigger","useScrollTrigger","icon","Fab","onClick","undefined","Box","stage","name","split","map","w","i","substring","toUpperCase","join","date","Date","toLocaleDateString","employee","supervisor","hr","str","slice","header","justifyContent","marginBottom","button","marginRight","errorBoundary","padding","flexDirection","ErrorComponent","Link","href","underline","ErrorBoundary","hasError","this","setState","props","React","Component","Confirmation","isOpen","setIsOpen","action","deletedId","buttonText","Dialog","DialogContent","DialogContentText","DialogActions","root","highlightedText","deleteColumn","width","planRow","cursor","nameField","whiteSpace","ListOfPlans","onPlanClicked","isHr","setPlanDeleted","NameField","useMediaQuery","formatService","confirmationOpen","setConfirmationOpen","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","employeePosition","IconButton","stopPropagation","AutocompleteStaff","size","setValue","attached","optionList","setOptionList","employees","defaultProps","options","getOptionLabel","option","Autocomplete","getOptionSelected","disableClearable","newValue","renderInput","PlanCreationForm","onCreation","toggleCreationMode","setPlans","pageCount","setPageCount","currentPage","limit","month","getMonth","employeeObj","setEmployeeObj","positionObj","setPositionObj","supervisorObj","setSupervisorObj","adaptationStart","setAdaptationStart","setMonth","adaptationEnd","setAdaptationEnd","p","planObject","completed","rate","tasks","createdPlan","length","concat","catch","Select","utils","DateFnsUtils","locale","inputVariant","disableToolbar","format","autoOk","loaderHoc","View","CircularProgress","minHeight","fab","position","bottom","right","PlanListPage","search","setOnCreation","setCurrentPage","planDeleted","loading","setLoading","page","ListOfPlansWithLoader","push","Pagination","count","RateBlock","displayPlan","handleCompleteMarkChange","handleRateChange","mapReplacement","Map","Fragment","row","textEnd","SelectDisplayProps","style","paddingRight","paddingLeft","rateSelect","MenuItem","stepper","flexWrap","ProgressBar","activeStep","setActiveStep","Stepper","alternativeLabel","Step","StepLabel","ComponentAvailability","stageRoleObj","currentRole","currentStage","Calendar","passChanges","dateField","convertedDate","toJSON","cardContainer","editIcon","overflow","textOverflow","planField","bottomCreationDate","AdaptationPlanCard","setDisplayPlan","expService","spaces","useRef","editing","setEditMode","setPlan","oldDisplayPlan","setOldDisplayPlan","editDisplayPlanField","prevData","passUserObj","userObj","handleDataChange","dataField","current","direction","Collapse","in","timeout","unmountOnExit","startDate","dateStart","dateEnd","dateStartLabel","dateEndLabel","handleDateChange","accordionRoot","accordion","transform","taskHeader","additionalInfo","taskDescription","minWidth","heading","flex","headingInput","calendar","deadlines","createdDate","TaskComponent","taskObj","planStage","removeTask","expandAccordion","setExpandAccordion","task","setTask","initialTask","setInitialTask","stageRoleModel","checkBox","editBtn","deleteBtn","updateTaskField","fieldName","handleInputChange","persist","Accordion","expanded","AccordionSummary","content","taskArrowIcon","multiline","rowsMax","Checkbox","checked","handleEditIconClick","description","executionEnd","AccordionDetails","rows","dateType","executionStart","TaskCreationForm","setTasks","toggleCreationForm","setName","isCompleted","setIsCompleted","setDescription","setExecutionStart","setExecutionEnd","taskObject","createdTask","FormControl","Loader","TasksBlock","planObj","index","prevTasks","filter","indx","author","Comment","ListItem","marginTop","commentList","maxHeight","commentForm","sendBtn","CommentBlock","comments","setComments","setText","onSendClick","newComment","createdComment","console","log","List","comment","placeholder","sendButtonsBox","cardHeader","PlanDetailsPage","useParams","isNextStage","setIsNextStage","isPreviousStage","setIsPreviousStage","getSendButtonText","maps","0","1","2","3","4","handleForwardClick","newPlan","updatedPlan","handleBackwardClick","AdapPlan","edge","permissions","Boolean","allowedToBackward","allowedToForward","logoutBtn","UserCard","handleLogoutClick","Card","CardContent","CardActions","toolbar","logo","borderRadius","shape","fade","searchIcon","pointerEvents","inputRoot","inputInput","appName","textDecoration","contrastText","HideOnScroll","Slide","appear","Header","setSearch","match","useRouteMatch","isShowing","isExact","anchorEl","setAnchorEl","popoverOpen","AppBar","Toolbar","Hidden","xsDown","smDown","InputBase","input","currentTarget","startIcon","Popover","transformOrigin","fontFamily","fontSize","createMuiTheme","secondary","typography","subtitle1","h5","lineHeight","App","Provider","ThemeProvider","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ce948b01.chunk.js","sourcesContent":["const get = (key) => {\r\n  const item = window.localStorage.getItem(key);\r\n  return JSON.parse(item);\r\n};\r\n\r\nconst set = (key, item) => {\r\n  const jsonItem = JSON.stringify(item);\r\n  window.localStorage.setItem(key, jsonItem)\r\n};\r\n\r\nconst remove = (key) => {\r\n  window.localStorage.removeItem(key);\r\n};\r\n\r\nexport default {\r\n  get,\r\n  set,\r\n  remove\r\n};","import axios from 'axios';\r\nimport storage from '../utils/storage.js';\r\n\r\nconst API_URL = '/api';\r\n\r\nconst getRequestConfig = (params) => {\r\n  const token = storage.get('savedUser').token;\r\n\r\n  return {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`  \r\n    },\r\n    params\r\n  } \r\n};\r\n\r\nconst getData = async (path, params) => {\r\n  const res = await axios.get(`${API_URL}/${path}`, getRequestConfig(params));\r\n  return res;\r\n};\r\n\r\nconst postData = async (path, data, params) => {\r\n  const res = await axios.post(`${API_URL}/${path}`, data, getRequestConfig(params));\r\n  return res;\r\n};\r\n\r\nconst putData = async (path, data, params) => {\r\n  const res = await axios.put(`${API_URL}/${path}`, data, getRequestConfig(params));\r\n  return res;\r\n};\r\n\r\nconst deleteData = async (path, params) => {\r\n  const res = await axios.delete(`${API_URL}/${path}`, getRequestConfig(params));\r\n  return res;\r\n};\r\n\r\nconst getAll = async (collection, params) => {\r\n  const res = await getData(collection, params);\r\n  return res.data;\r\n};\r\n\r\nconst get = async (docName, id, params) => {\r\n  const res = await getData(`${docName}s/${id}`, params);\r\n  return res.data;\r\n};\r\n\r\nconst getAllTasksFromPlan = async (id, params) => await getAll(`plans/${id}/tasks`, params);\r\n\r\nconst getAllCommentsFromPlan = async (id, params) => await getAll(`plans/${id}/comments`, params);\r\n\r\nconst create = async (docName, newObject) => {\r\n  const res = await postData(`${docName}s`, newObject);\r\n  return res.data;\r\n};\r\n\r\nconst update = async (docName, id, newObject) => {\r\n  const res = await putData(`${docName}s/${id}`, newObject);\r\n  return res.data;\r\n};\r\n\r\nconst remove = async (docName, id) => {\r\n  return await deleteData(`${docName}s/${id}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  getAllTasksFromPlan,\r\n  getAllCommentsFromPlan,\r\n  create,\r\n  update,\r\n  remove\r\n};","import axios from 'axios';\r\n\r\nconst URL = '/api/login';\r\n\r\nconst login = async userData => {\r\n  const res = await axios.post(URL, userData);\r\n  return res.data;\r\n};\r\n\r\nexport default {\r\n  login\r\n};","export default {\r\n  hr: 'hr',\r\n  supervisor: 'supervisor',\r\n  employee: 'employee'\r\n};","import { createContext, useContext } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst useAuth = () => useContext(AuthContext);\r\n\r\nexport {\r\n  AuthContext,\r\n  useAuth\r\n};","import { createContext, useContext } from 'react';\r\n\r\nconst ExpServiceContext = createContext();\r\n\r\nconst useExpService = () => useContext(ExpServiceContext);\r\n\r\nexport {\r\n  ExpServiceContext,\r\n  useExpService\r\n};","import React from 'react';\r\nimport { Route, Redirect, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../context/auth.js';\r\n\r\nconst PrivateRoute = ({ children, roles, ...rest }) => {\r\n  const userData = useAuth();\r\n  const location = useLocation();\r\n\r\n  const getChildren = () => {\r\n    if (!userData) {\r\n      return (<Redirect to={{\r\n        pathname: '/login',\r\n        state: { from: location }\r\n      }} />);\r\n    }\r\n\r\n    if (roles && !roles.includes(userData.role)) {\r\n      return <Redirect to='/' />;\r\n    }\r\n\r\n    return children;\r\n  };\r\n\r\n  return (\r\n    <Route {...rest}>\r\n      {getChildren()}\r\n    </Route>\r\n  )\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useAuth } from '../context/auth.js';\r\nimport role from '../utils/role.js';\r\nimport { useExpService } from '../context/expService.js';\r\n\r\nconst Distributor = () => {\r\n  const [ planId, setPlanId ] = useState(null);\r\n  const exposureService = useExpService();\r\n  const user = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (user && user.role === role.employee) {\r\n      exposureService.getAll('plans')\r\n        .then(({ plans: [plan] }) => setPlanId(plan.id));\r\n    } else {\r\n      setPlanId('all');\r\n    }\r\n  }, [ exposureService, user]);\r\n\r\n  if (!user) {\r\n    return (<Redirect to='/login' />);\r\n  }\r\n\r\n  if (user.role === role.employee && planId !== null) {\r\n    return (<Redirect to={`/plans/${planId}`} />);\r\n  }\r\n\r\n  if (planId === 'all') {\r\n    return (<Redirect to={`/plans/`} />);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Distributor;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Snackbar\r\n} from '@material-ui/core';\r\nimport {\r\n  Alert\r\n} from '@material-ui/lab';\r\n\r\nexport const notify = (type, message) => {\r\n  const event = new CustomEvent('notification', {\r\n    detail: {\r\n      type,\r\n      message \r\n    }\r\n  });\r\n  document.dispatchEvent(event);\r\n};\r\n\r\nconst Notification = () => {\r\n  const [ open, setOpen ] = useState(false);\r\n  const [ notification, setNotification ] = useState({});\r\n\r\n  useEffect(() => {\r\n    const notificationListener = ({ detail }) => {\r\n      setNotification(detail);\r\n      setOpen(true);\r\n    };\r\n\r\n    document.addEventListener('notification', notificationListener);\r\n\r\n    return () => {\r\n      document.removeEventListener('notification', notificationListener);\r\n    }\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n      open={open}\r\n      onClose={handleClose}\r\n      autoHideDuration={6000}>\r\n      <Alert\r\n        elevation={2}\r\n        onClose={handleClose}\r\n        severity={notification.type}>\r\n\r\n        {notification.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default Notification;","import React, { useState } from 'react';\r\nimport {\r\n    Container,\r\n    TextField,\r\n    Grid,\r\n    Button,  \r\n    Typography,\r\n    makeStyles } from '@material-ui/core';\r\nimport Notification, { notify } from '../../reusable/Notification.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    textAlign: 'center',\r\n    fontWeight: 600\r\n  },\r\n  container: {\r\n    height: '100vh',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  }\r\n}));\r\n\r\nconst LoginForm = ({ login }) => {\r\n  const { title, container } = useStyles();\r\n\r\n  const [ username, setUsername ] = useState('');\r\n  const [ password, setPassword ] = useState('');\r\n  const [ error, setError ] = useState(false);\r\n  const [ errorText, setErrorText ] = useState('');\r\n\r\n  const handleUsernameChange = ({ target }) => {\r\n    setError(false);\r\n    setErrorText('');\r\n    setUsername(target.value);\r\n  };\r\n\r\n  const handlePasswordChange = ({ target }) => {\r\n    setError(false);\r\n    setErrorText('');\r\n    setPassword(target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await login(username, password);\r\n    }\r\n    catch (e) {\r\n      notify('error', 'Ошибка при входе')\r\n      setError(true);\r\n      setErrorText('Неверное имя пользователя или пароль')\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={container} maxWidth='xs'>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container justify='flex-end' alignItems='center' spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Typography className={title} variant='h4' gutterBottom>\r\n              Exposure App\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              error={error}\r\n              label='Имя пользователя'\r\n              variant='outlined'\r\n              value={username}\r\n              onChange={handleUsernameChange}\r\n              required\r\n              fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              helperText={errorText}\r\n              error={error}\r\n              label='Пароль'\r\n              type='password'\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n              variant='outlined'\r\n              autoComplete='current-password'\r\n              required\r\n              fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              fullWidth>\r\n                Войти\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Notification />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport LoginForm from '../components/Auth/LoginForm.js';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport storage from '../utils/storage.js';\r\n\r\nconst AuthPage = ({ setUser, loginService }) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { from } = location.state || { from: '/' };\r\n\r\n  const login = async (username, password) => {\r\n    const user = await loginService.login({\r\n      username,\r\n      password\r\n    });\r\n    storage.set('savedUser', user);\r\n    setUser(user);\r\n    history.replace(from);\r\n  };\r\n\r\n  return (\r\n    <LoginForm\r\n      login={login} />\r\n  );\r\n};\r\n\r\nexport default AuthPage;","import React from 'react';\r\nimport {\r\n  Fab,\r\n  makeStyles,\r\n  useScrollTrigger,\r\n  Box } from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  btnText: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  sendFab: {\r\n    margin: theme.spacing(1),\r\n    textTransform: 'none',\r\n    backgroundColor: theme.palette.common.white,\r\n    color: theme.palette.primary.main,\r\n    transition: 'all .09s'\r\n  }\r\n}));\r\n\r\nconst ActionButton = ({ type, handler, text, innerIcon }) => {\r\n  const classes = useStyles();\r\n  const trigger = useScrollTrigger();\r\n\r\n  const icon = (type === 'forward')\r\n    ? <ArrowForwardIcon />\r\n    : <ArrowBackIcon />;\r\n  \r\n  const variant = trigger\r\n    ? 'round'\r\n    : 'extended';\r\n\r\n  return (\r\n    <Fab\r\n      onClick={handler}\r\n      className={classes.sendFab}\r\n      variant={variant}>\r\n      { type !== undefined\r\n        ? icon\r\n        : innerIcon }\r\n      { !trigger\r\n\r\n        ? <Box className={classes.btnText}>{text}</Box>\r\n        : null }\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default ActionButton;","\r\nconst setShortName = name => name.split(/\\s+/).map((w, i) => i ? w.substring(0,1).toUpperCase() + '.' : w ).join(' ');\r\n\r\nconst getStage = (stage) => {\r\n  switch (stage) {\r\n    case 0:\r\n      stage = 'Заполнение сотрудником';\r\n      break;\r\n    case 1:\r\n      stage = 'Согласование руководителем';\r\n      break;\r\n    case 2:\r\n      stage = 'Выполнение';\r\n      break;\r\n    case 3:\r\n      stage = 'Оценка руководителем';\r\n      break;\r\n    default:\r\n      stage = 'Оценка завершена';\r\n  }\r\n  return stage;\r\n}\r\n\r\n\r\nconst setDate = date => new Date(date).toLocaleDateString();\r\n\r\nconst getRole = role => {\r\n  const roleMaps = {\r\n    employee: 'сотрудник',\r\n    supervisor: 'руководитель',\r\n    hr: 'сотрудник кадровой службы',\r\n  };\r\n  return roleMaps[role];\r\n};\r\n\r\nconst capitalizeFirstLetter = str => str[0].toUpperCase() + str.slice(1);\r\n\r\nexport default {\r\n  getStage,\r\n  setShortName,\r\n  setDate,\r\n  getRole,\r\n  capitalizeFirstLetter\r\n};","import React from 'react';\r\nimport { Box, Typography, makeStyles, Link } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  button: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: theme.palette.primary.main,\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  errorBoundary: {\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  errorText:{\r\n    color: '#c23934'\r\n  }\r\n}));\r\n\r\nexport default function ErrorComponent() {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.errorBoundary}>\r\n      <Typography variant='h5' gutterBottom className={classes.errorText}>\r\n        Упс, произошла ошибка с:\r\n        </Typography>\r\n      <Typography variant='body2' className={classes.errorText}>\r\n        Пожалуйста, дайте <Link href=\"mailto:help@greenatom.ru\" underline={'always'} className={classes.errorText}>нам</Link> знать об этом.\r\n        </Typography>\r\n    </Box>\r\n  )\r\n}","import React from 'react';\r\nimport ErrorComponent from '../helpers/ErrorComponent.js'\r\n\r\nclass ErrorBoundary extends React.Component {\r\n\r\n  state = {\r\n    hasError: false\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.hasError) {\r\n      return <ErrorComponent/>\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  DialogContentText\r\n}  \r\nfrom '@material-ui/core';\r\n\r\nconst Confirmation = ({isOpen, setIsOpen, message, action, deletedId, buttonText}) => {\r\n  const handleClose = () => setIsOpen(false);\r\n  const takeAction = (id) => {\r\n    if (id)\r\n      action(id);\r\n    else action();\r\n    setIsOpen(false);\r\n  }\r\n  return (\r\n    <Dialog open={isOpen} onClose={handleClose}>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          {message} \r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Отменить\r\n        </Button>\r\n        <Button onClick={() => takeAction(deletedId)} color=\"primary\"> \r\n          {buttonText ? buttonText : 'Удалить'}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n\r\nexport default Confirmation;","import React, { useState } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n  useMediaQuery\r\n}\r\n  from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useExpService } from '../../context/expService.js';\r\nimport formatService from '../../services/formatService.js';\r\nimport ErrorBoundary from '../../reusable/ErrorBoundary.js';\r\nimport Confirmation from '../../reusable/Confirmation.js';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n  },\r\n  highlightedText: {\r\n    color: '#a6ce39'\r\n  },\r\n  deleteColumn: {\r\n    width: \"5%\"\r\n  },\r\n  planRow: {\r\n    cursor: 'pointer',\r\n    \"&:hover\": {\r\n      backgroundColor: \"#f9f9f9\"\r\n    }\r\n  },\r\n  nameField: {\r\n    whiteSpace: 'nowrap',\r\n  }\r\n}));\r\n\r\n\r\nconst ListOfPlans = ({ onPlanClicked, data: plans, isHr, setPlanDeleted }) => {\r\n  const NameField = ({ name }) => {\r\n    if (!useMediaQuery('(min-width:960px)'))\r\n      name = formatService.setShortName(name)\r\n    return <span className={classes.nameField}>{name}</span>;\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const exposureService = useExpService();\r\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\r\n  const [planId, setPlanId] = useState(null);\r\n\r\n  const handleConfirmationOpen = (id, event) => {\r\n    setPlanId(id);\r\n    setConfirmationOpen(true);\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const deletePlan = id => {\r\n    exposureService.remove('plan', id)\r\n      .then(res => {\r\n        setPlanDeleted(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <ErrorBoundary>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Сотрудник</TableCell>\r\n                <TableCell>Статус</TableCell>\r\n                {isHr && <TableCell>Руководитель</TableCell>}\r\n                <TableCell>Дата создания</TableCell>\r\n                {isHr && <TableCell className={classes.deleteColumn}></TableCell>}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {plans.map(plan => (\r\n                <TableRow className={classes.planRow} onClick={() => onPlanClicked(plan.id)} key={plan.id}>\r\n                  <TableCell >\r\n                    <NameField name={plan.employee.name} />\r\n                    <Typography variant=\"subtitle1\">{plan.employeePosition.name}</Typography>\r\n                  </TableCell>\r\n                  <TableCell>{formatService.getStage(plan.stage)}</TableCell>\r\n                  {isHr && <TableCell><NameField name={plan.supervisor.name} /></TableCell>}\r\n                  <TableCell>{formatService.setDate(plan.date)}</TableCell>\r\n                  {isHr &&\r\n                    <TableCell>\r\n                      <IconButton onClick={(e) => handleConfirmationOpen(plan.id, e)}>\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </TableCell>}\r\n                </TableRow>\r\n              ))\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Confirmation\r\n          isOpen={confirmationOpen}\r\n          setIsOpen={setConfirmationOpen}\r\n          message='Вы уверены, что хотите удалить план?'\r\n          deletedId={planId}\r\n          action={deletePlan}\r\n        />\r\n      </ErrorBoundary>\r\n    </Box>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ListOfPlans;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useExpService } from '../context/expService.js';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst AutocompleteStaff = ( {variant, size, label, setValue, path, role, attached, value} ) => {\r\n  const [optionList, setOptionList] = useState([]);\r\n  const exposureService = useExpService();\r\n  \r\n  useEffect(() => {\r\n    exposureService\r\n      .getAll(path, { role, attached })\r\n      .then(employees => setOptionList(employees))    \r\n  }, [exposureService, role, path, attached]);\r\n\r\n\r\n  const defaultProps = {\r\n    options: optionList,\r\n    getOptionLabel: (option) => option.name,\r\n  };\r\n\r\n  return (\r\n    <Autocomplete\r\n    {...defaultProps}\r\n    value={value}\r\n    getOptionSelected={(option, value)=> option.id === value.id}\r\n    disableClearable\r\n    onChange={(e, newValue) => setValue(newValue, role)}\r\n    renderInput={(params) => <TextField {...params} label={label} variant={variant} size={size} required/>}\r\n  />\r\n  )\r\n};\r\n\r\nexport default AutocompleteStaff;","import React, { useState } from 'react';\r\nimport { useExpService } from '../../context/expService.js';\r\nimport { useAuth } from '../../context/auth.js';\r\nimport {\r\n  Box,\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  IconButton\r\n } \r\nfrom '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport locale from \"date-fns/locale/ru\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport role from '../../utils/role.js';\r\nimport Select from '../../reusable/Select.js';\r\nimport Notification, { notify } from '../../reusable/Notification.js';\r\n\r\n\r\nconst PlanCreationForm = (\r\n  {\r\n    onCreation,\r\n    toggleCreationMode,\r\n    plans,\r\n    setPlans,\r\n    pageCount,\r\n    setPageCount,\r\n    currentPage,\r\n    limit\r\n  }\r\n) => {\r\n  const user = useAuth();\r\n  let month = new Date().getMonth();\r\n  const exposureService = useExpService();\r\n\r\n  const [employeeObj, setEmployeeObj] = useState(null);\r\n  const [positionObj, setPositionObj] = useState(null);\r\n  const [supervisorObj, setSupervisorObj] = useState(null);\r\n  const [adaptationStart, setAdaptationStart] = useState(new Date());\r\n  const [adaptationEnd, setAdaptationEnd] = useState(new Date().setMonth(month + 3));\r\n\r\n  const handleAdaptationStart = date => setAdaptationStart(date);\r\n  const handleAdaptationEnd = date => setAdaptationEnd(date);\r\n\r\n  const addPlan = (event) => {\r\n    event.preventDefault()\r\n    const planObject =\r\n    {\r\n      employeePosition: positionObj.id,\r\n      employee: employeeObj.id,\r\n      supervisor: supervisorObj.id,\r\n      hr: user.id,\r\n      stage: 0,\r\n      adaptationStart: adaptationStart,\r\n      adaptationEnd: adaptationEnd,\r\n      completed: \"false\",\r\n      rate: \"A\",\r\n      tasks: []\r\n    };\r\n\r\n\r\n    exposureService\r\n      .create('plan', planObject)\r\n      .then(createdPlan => {\r\n        if (currentPage === pageCount) {\r\n          if (plans.length === limit)\r\n            setPageCount(pageCount + 1);\r\n          else\r\n            setPlans(plans.concat(createdPlan));\r\n        };\r\n        setEmployeeObj(null);\r\n        setSupervisorObj(null);\r\n        setPositionObj(null);\r\n        setAdaptationStart(new Date());\r\n        setAdaptationEnd(new Date());\r\n        toggleCreationMode()\r\n        notify('success', 'План был успешно создан.');\r\n      })\r\n      .catch(error => {\r\n        notify('error', 'Ошибка при создании плана.');\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Dialog open={onCreation} onClose={toggleCreationMode} > \r\n      <Box p=\"1.5rem\" maxWidth={400}>\r\n        <form onSubmit={addPlan}>    \r\n          <Grid container spacing={2} justify='flex-end'>\r\n            <Grid item xs={12} container justify='space-between'>\r\n              <Typography variant=\"h6\">Создание плана</Typography> \r\n              <IconButton size=\"small\" onClick={toggleCreationMode} >\r\n                <CloseIcon />\r\n              </IconButton> \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Select\r\n                label='ФИО сотрудника'\r\n                variant='outlined'\r\n                setValue={setEmployeeObj}\r\n                path='users'\r\n                role={role.employee}\r\n                attached={false}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Select\r\n                label='Должность'\r\n                variant='outlined'\r\n                setValue={setPositionObj}\r\n                path='positions'\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Select\r\n                label='ФИО руководителя'\r\n                variant='outlined'\r\n                setValue={setSupervisorObj}\r\n                path='users'\r\n                role={role.supervisor}\r\n              />\r\n            </Grid>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={locale}>\r\n              <Grid item xs={12} sm={6}>\r\n                <KeyboardDatePicker  \r\n                  inputVariant=\"outlined\"           \r\n                  disableToolbar        \r\n                  variant=\"inline\"\r\n                  format=\"dd.MM.yyyy\"\r\n                  label=\"Начало адаптации\"\r\n                  autoOk={true}\r\n                  fullWidth\r\n                  required\r\n                  value={adaptationStart}\r\n                  onChange={handleAdaptationStart}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <KeyboardDatePicker\r\n                  inputVariant=\"outlined\"\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd.MM.yyyy\"\r\n                  label=\"Конец адаптации\"\r\n                  required\r\n                  autoOk={true}\r\n                  fullWidth\r\n                  value={adaptationEnd}\r\n                  onChange={handleAdaptationEnd}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n            <Grid item xs={12} sm={3}>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                type=\"Submit\"\r\n                fullWidth>\r\n                Создать\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Box>\r\n    </Dialog>\r\n    <Notification />\r\n  </>\r\n  )\r\n};\r\n\r\nexport default PlanCreationForm;","import React from 'react';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\n\r\n\r\nfunction loaderHoc(View, data) {\r\n  return function (props) {\r\n\r\n      if (JSON.stringify(data) === '[]' || !data) {\r\n        return (\r\n          <Grid container justify='center'>\r\n            <CircularProgress size={50} />\r\n          </Grid>\r\n        );\r\n      }\r\n\r\n      return (<View data={data} {...props} />)\r\n  }\r\n}\r\n\r\nexport default loaderHoc;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Grid, Box, Typography, makeStyles } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { useExpService } from '../context/expService.js';\r\nimport role from '../utils/role.js'\r\nimport { useAuth } from '../context/auth.js';\r\nimport ActionButton from '../reusable/ActionButton.js';\r\n\r\nimport ListOfPlans from '../components/PlanList/ListOfPlans.js';\r\nimport PlanCreationForm from '../components/PlanList/PlanCreationForm.js';\r\nimport loaderHoc from '../reusable/HocLoader.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  message: {\r\n    minHeight: 500,\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(3),\r\n    right: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst PlanListPage = ({ search }) => {\r\n  const classes = useStyles();\r\n  const user = useAuth();\r\n  const isHr = role.hr === user.role;\r\n  const exposureService = useExpService();\r\n  const [plans, setPlans] = useState([]);\r\n  const [onCreation, setOnCreation] = useState(false);\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [planDeleted, setPlanDeleted] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const limit = 5;\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    exposureService\r\n      .getAll(`plans`, { page: currentPage, limit: limit, search: search })\r\n      .then(data => {\r\n        setPlans(data.plans);\r\n        setPageCount(data.pageCount);\r\n        setPlanDeleted(false);\r\n        setLoading(false);\r\n      });\r\n  }, [currentPage, exposureService, search, planDeleted]);\r\n\r\n\r\n\r\n  const handleCurrentPage = (event, value) => {\r\n    setCurrentPage(value);\r\n  };\r\n\r\n  const toggleCreationMode = () => setOnCreation(onCreation => !onCreation);\r\n\r\n  const onPlanClicked = (id) => {\r\n    history.push(id);\r\n  };\r\n\r\n  const ListOfPlansWithLoader = loaderHoc(\r\n    ListOfPlans,\r\n    plans\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Grid justify='center' container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\">Адаптационные планы</Typography>\r\n          <ListOfPlansWithLoader\r\n            onPlanClicked={onPlanClicked}\r\n            isHr={isHr}\r\n            setPlanDeleted={setPlanDeleted}\r\n          />\r\n        </Grid>\r\n        {!loading &&\r\n          <Grid item>\r\n            <Pagination count={pageCount} page={currentPage} onChange={handleCurrentPage} />\r\n          </Grid>}\r\n      </Grid>\r\n      {!loading &&\r\n        (plans.length ?\r\n          <PlanCreationForm\r\n            onCreation={onCreation}\r\n            toggleCreationMode={toggleCreationMode}\r\n            plans={plans}\r\n            setPlans={setPlans}\r\n            pageCount={pageCount}\r\n            setPageCount={setPageCount}\r\n            currentPage={currentPage}\r\n            limit={limit}\r\n          />\r\n          :\r\n          <Grid container justify=\"center\" alignItems=\"center\" className={classes.message} >\r\n            <Typography variant=\"subtitle1\">Планов пока нет, но они скоро появятся :)</Typography>\r\n          </Grid>\r\n        )\r\n      }\r\n      {isHr\r\n        ? <Box className={classes.fab}>\r\n            <ActionButton\r\n              text='Создать план'\r\n              innerIcon={<AddIcon />}\r\n              handler={toggleCreationMode} />\r\n          </Box>\r\n        : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlanListPage;","import React from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Select,\r\n  MenuItem\r\n} from '@material-ui/core';\r\n\r\nexport default function RateBlock({ classes, displayPlan, handleCompleteMarkChange, handleRateChange }) {\r\n\r\n  const mapReplacement = new Map([\r\n    [true, \"Программа пройдена\"],\r\n    [false, \"Программа не пройдена\"],\r\n    ['A', \"A. Исключительно высокий уровень эффективности\"],\r\n    ['B', \"B. Высокий уровень эффективности\"],\r\n    ['C', \"C. Уровень соответствия занимаемой должности\"],\r\n    ['D', \"D. Уровень эффективности ниже стандартного\"],\r\n    ['E', \"E. Неудовлетворительный уровень эффективности\"]\r\n  ]);\r\n\r\n  if (displayPlan.stage < 3) return null;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item container className={classes.row}>\r\n        <Grid item container xs={4}>\r\n          <Typography className={classes.textEnd}>\r\n            Итоги:\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={8} sm={7}>\r\n          {displayPlan.stage === 4\r\n            ? <Typography>{mapReplacement.get(displayPlan.completed)} </Typography>\r\n            : <Select\r\n              SelectDisplayProps={{\r\n                style: {\r\n                  padding: 10.5,\r\n                  paddingRight: 39,\r\n                  paddingLeft: 14\r\n                }\r\n              } \r\n              }\r\n              variant='outlined'\r\n              value={displayPlan.completed}\r\n              onChange={handleCompleteMarkChange}\r\n              className={classes.rateSelect}\r\n            >\r\n              <MenuItem value={false}>Программа не пройдена</MenuItem>\r\n              <MenuItem value={true}>Программа пройдена</MenuItem>\r\n            </Select>}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item container className={classes.row}>\r\n        <Grid item container xs={4}>\r\n          <Typography className={classes.textEnd}>\r\n            Оценка:\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={8} sm={7}>\r\n          {displayPlan.stage === 4\r\n            ? <Typography>{mapReplacement.get(displayPlan.rate)} </Typography>\r\n            : <Select\r\n              SelectDisplayProps={{\r\n                style: {\r\n                  padding: 10.5,\r\n                  paddingRight: 39,\r\n                  paddingLeft: 14\r\n                }\r\n              } \r\n              }\r\n              variant='outlined'\r\n              value={displayPlan.rate}\r\n              onChange={handleRateChange}\r\n              className={classes.rateSelect}\r\n            >\r\n              <MenuItem value={'A'}>A. Исключительно высокий уровень эффективности</MenuItem>\r\n              <MenuItem value={'B'}>B. Высокий уровень эффективности</MenuItem>\r\n              <MenuItem value={'C'}>C. Уровень соответствия занимаемой должности</MenuItem>\r\n              <MenuItem value={'D'}>D. Уровень эффективности ниже стандартного</MenuItem>\r\n              <MenuItem value={'E'}>E. Неудовлетворительный уровень эффективности</MenuItem>\r\n            </Select>}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        width: '100%',\r\n        '& .MuiStep-horizontal': {\r\n            paddingLeft: '0px',\r\n            paddingRight: '5px',\r\n        }\r\n    },\r\n    stepper: {\r\n        flexWrap: 'wrap'\r\n    }\r\n}));\r\n\r\nexport default function ProgressBar({ stage }) {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const steps = ['Заполнение', 'Согласование', 'Выполнение', 'Оценка', 'Завершено'];\r\n\r\n    useEffect(() => {\r\n        setActiveStep(stage);\r\n    }, [stage, activeStep]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Stepper className={classes.stepper} activeStep={activeStep} alternativeLabel>\r\n                {steps.map((label) => (\r\n                    <Step key={label}>\r\n                        <StepLabel>{label}</StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            {/* <div>\r\n                {activeStep === steps.length ? (\r\n                    <div>\r\n                        <Typography className={classes.instructions}>All steps completed</Typography>\r\n                        <Button onClick={handleReset}>Reset</Button>\r\n                    </div>\r\n                ) : (\r\n                        <div>\r\n                            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n                            <div>\r\n                                <Button\r\n                                    disabled={activeStep === 0}\r\n                                    onClick={handleBack}\r\n                                    className={classes.backButton}\r\n                                >\r\n                                    Back\r\n              </Button>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n            </div> */}\r\n        </div>\r\n    );\r\n}","export default function ComponentAvailability({ stageRoleObj, currentRole, currentStage, children }) {\r\n  if (currentStage === 4) return null\r\n  else if (currentRole === 'hr') return children;\r\n  \r\n  const userIn = stageRoleObj[currentRole].includes(currentStage);\r\n  // console.log(stageRoleObj[currentRole]);\r\n  // console.log(currentStage);\r\n\r\n  if (userIn) {\r\n    return (\r\n      children\r\n    )\r\n  } else {\r\n    return null;\r\n  }\r\n}","import React from 'react';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport locale from \"date-fns/locale/ru\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\n\r\nexport default function Calendar({ passChanges, value, dateField, size }) {\r\n\r\n  const handleDateChange = (e) => {\r\n    const convertedDate = e.toJSON();\r\n    passChanges(dateField, convertedDate);\r\n  }\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={locale}>\r\n      <KeyboardDatePicker\r\n        inputVariant=\"outlined\"\r\n        disableToolbar\r\n        variant=\"inline\"\r\n        format=\"dd.MM.yyyy\"\r\n        size={size}\r\n        autoOk={true}\r\n        value={value}\r\n        onChange={handleDateChange}\r\n      />\r\n    </MuiPickersUtilsProvider>)\r\n}","import React, { useState, useRef } from 'react';\r\nimport { useAuth } from '../../context/auth.js';\r\n\r\nimport RateBlock from './RateBlock.js';\r\nimport ProgressBar from '../../reusable/ProgressBar.js';\r\nimport SelectUsers from '../../reusable/Select.js';\r\nimport formatService from '../../services/formatService.js'\r\nimport { useExpService } from '../../context/expService.js';\r\nimport ComponentAvailability from '../../reusable/ComponentAvailability.js';\r\nimport ErrorBoundary from '../../reusable/ErrorBoundary.js';\r\nimport role from '../../utils/role.js';\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  makeStyles,\r\n  Typography,\r\n  IconButton,\r\n  Collapse\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CalendarSingle from '../../reusable/CalendarSingle.js';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { notify } from '../../reusable/Notification.js';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardContainer: {\r\n    position: 'relative',\r\n    padding: theme.spacing(2),\r\n  },\r\n  editIcon: {\r\n    marginLeft: 'auto',\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  row: {\r\n    minHeight: (40 + theme.spacing(1)),\r\n    alignItems: 'center',\r\n  },\r\n  textEnd: {\r\n    marginRight: theme.spacing(1),\r\n    marginLeft: 'auto',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  planField: {\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  bottomCreationDate: {\r\n    textAlign: 'end',\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  rateSelect: {\r\n    width: '100%',\r\n    padding: 0\r\n  }\r\n}));\r\n\r\nconst AdaptationPlanCard = ({ data: displayPlan, setDisplayPlan }) => {\r\n  const expService = useExpService();\r\n  const classes = useStyles();\r\n  let spaces = useRef(3);\r\n  const user = useAuth()\r\n\r\n  const [editing, setEditMode] = useState(false);\r\n  const [plan, setPlan] = useState(displayPlan);\r\n  const [oldDisplayPlan, setOldDisplayPlan] = useState(displayPlan);\r\n\r\n  const stageRoleModel = {\r\n    editBtn: {\r\n      supervisor: [1],\r\n      employee: []\r\n    },\r\n    editSummary: {\r\n      supervisor: [3],\r\n      employee: []\r\n    }\r\n  }\r\n\r\n  const editDisplayPlanField = (position, value) => {\r\n    setPlan(prevData => {\r\n      return {\r\n        ...prevData,\r\n        [position]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  const passUserObj = (userObj, role) => {\r\n    editDisplayPlanField(role, userObj);\r\n  }\r\n\r\n  const passPositionId = (positionObj, role) => {\r\n    editDisplayPlanField(role, positionObj);\r\n  }\r\n\r\n  const handleDataChange = (dataField, value) => {\r\n    editDisplayPlanField(dataField, value);\r\n  }\r\n\r\n  const handleCompleteMarkChange = (e) => {\r\n    editDisplayPlanField('completed', e.target.value);\r\n  }\r\n\r\n  const handleRateChange = (e) => {\r\n    editDisplayPlanField('rate', e.target.value);\r\n  }\r\n\r\n  const handleEditIconClick = () => {\r\n    spaces.current = editing ? 3 : 2;\r\n    setPlan(oldDisplayPlan);\r\n    setEditMode(!editing);\r\n  }\r\n\r\n  const handleSaveBtnClick = () => {\r\n    expService.update('plan', plan.id, {\r\n      ...plan,\r\n      employee: plan.employee.id,\r\n      hr: plan.hr.id,\r\n      supervisor: plan.supervisor.id,\r\n      employeePosition: plan.employeePosition.id,\r\n    })\r\n      .then((res) => {\r\n        notify('success', 'Изменения сохранены.');\r\n        spaces.current = editing ? 3 : 2;\r\n        setDisplayPlan(res);\r\n        setEditMode(false);\r\n        setOldDisplayPlan(res);\r\n      }).catch(() => {\r\n        notify('error', 'Возникла ошибка. Проверьте правильность заполнения полей.');\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <Paper elevation={2} className={classes.cardContainer}>\r\n          <Grid container>\r\n            <ComponentAvailability\r\n              stageRoleObj={stageRoleModel.editBtn}\r\n              currentRole={user.role}\r\n              currentStage={plan.stage}\r\n            >\r\n              <IconButton\r\n                size='small'\r\n                className={classes.editIcon}\r\n                onClick={handleEditIconClick}\r\n              >\r\n                {editing\r\n                  ? <CloseIcon />\r\n                  : <EditIcon />\r\n                }\r\n              </IconButton>\r\n            </ComponentAvailability>\r\n          </Grid>\r\n          <Grid container direction='column' spacing={1}>\r\n            <Grid item container className={classes.row} alignItems='center'>\r\n              <Grid item container xs={4}>\r\n                <Typography className={classes.textEnd}>\r\n                  Сотрудник:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={8} sm={7}>\r\n                {editing\r\n                  ? <SelectUsers\r\n                    label=''\r\n                    size='small'\r\n                    variant='outlined'\r\n                    setValue={passUserObj}\r\n                    path='users'\r\n                    role='employee'\r\n                    attached='false'\r\n                    value={plan.employee}\r\n                  />\r\n                  : <Typography className={classes.plan}>{displayPlan.employee.name} </Typography>\r\n                }\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container className={classes.row} >\r\n              <Grid item container xs={4}>\r\n                <Typography className={classes.textEnd}>\r\n                  Должность:\r\n                  </Typography>\r\n              </Grid>\r\n              <Grid item xs={8} sm={7}>\r\n                {editing\r\n                  ? <SelectUsers\r\n                    size='small'\r\n                    variant='outlined'\r\n                    label=''\r\n                    setValue={passPositionId}\r\n                    path='positions'\r\n                    role='employeePosition'\r\n                    value={plan.employeePosition}\r\n                  />\r\n                  : <Typography className={classes.planField}>{plan.employeePosition.name} </Typography>\r\n                }\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item container className={classes.row}>\r\n              <Grid item container xs={4}>\r\n                <Typography className={classes.textEnd}>\r\n                  Руководитель:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={8} sm={7}>\r\n                {editing\r\n                  ? <SelectUsers\r\n                    label=''\r\n                    size='small'\r\n                    variant='outlined'\r\n                    setValue={passUserObj}\r\n                    path='users'\r\n                    role='supervisor'\r\n                    value={plan.supervisor}\r\n                  />\r\n                  : <Typography className={classes.planField}>\r\n                    {plan.supervisor.name}\r\n                  </Typography>\r\n                }\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item container className={classes.row}>\r\n              <Grid item container xs={4}>\r\n                <Typography className={classes.textEnd}>\r\n                  Начало исп. срока:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={8} sm={7}>\r\n                {editing\r\n                  ? <CalendarSingle\r\n                    size='small'\r\n                    passChanges={handleDataChange}\r\n                    dateField='adaptationStart'\r\n                    value={plan.adaptationStart}\r\n                  />\r\n                  : <Typography className={classes.planField}>{formatService.setDate(plan.adaptationStart)} </Typography>\r\n                }\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container className={classes.row}>\r\n              <Grid item container xs={4}>\r\n                <Typography className={classes.textEnd}>\r\n                  Конец исп. срока:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={8} sm={7}>\r\n                {editing\r\n                  ? <CalendarSingle\r\n                    size='small'\r\n                    passChanges={handleDataChange}\r\n                    dateField='adaptationEnd'\r\n                    value={plan.adaptationEnd}\r\n                  />\r\n                  : <Typography className={classes.planField}>{formatService.setDate(plan.adaptationEnd)} </Typography>\r\n                }\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container className={classes.row}>\r\n              <Grid item container xs={4}>\r\n                <Typography className={classes.textEnd}>\r\n                  Создан:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={8} sm={7}>\r\n                <Typography className={classes.planField}>\r\n                  {plan.hr.name}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            {(user.role !== role.employee) &&\r\n              <RateBlock\r\n                classes={classes}\r\n                displayPlan={plan}\r\n                handleCompleteMarkChange={handleCompleteMarkChange}\r\n                handleRateChange={handleRateChange}\r\n              />\r\n            }\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <ProgressBar stage={plan.stage} />\r\n          </Grid>\r\n          <Typography color='textSecondary' variant=\"body2\" className={classes.bottomCreationDate}>\r\n            Создан {formatService.setDate(plan.date)}\r\n          </Typography>\r\n\r\n          <Collapse in={editing} timeout=\"auto\" unmountOnExit>\r\n            <Grid xs={12} item container justify='flex-end'>\r\n              <Button\r\n                color=\"primary\"\r\n                type=\"Submit\"\r\n                onClick={handleSaveBtnClick}>\r\n                Сохранить\r\n            </Button>\r\n            </Grid>\r\n          </Collapse>\r\n        </Paper>\r\n      </ErrorBoundary>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default AdaptationPlanCard;","import React from 'react';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport locale from \"date-fns/locale/ru\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport {\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  startDate: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function Calendar({ passChanges, dateStart, dateEnd, dateStartLabel, dateEndLabel, size }) {\r\n  const classes = useStyles();\r\n\r\n  const handleDateChange = (e, dateField) => {\r\n    passChanges(dateField, e);\r\n  }\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={locale}>\r\n      <KeyboardDatePicker\r\n        size={size}\r\n        className={classes.startDate}\r\n        inputVariant=\"outlined\" \r\n        disableToolbar\r\n        variant=\"inline\"\r\n        format=\"dd.MM.yyyy\"\r\n        margin=\"normal\"\r\n        label={dateStartLabel}\r\n        autoOk={true}\r\n        value={dateStart}\r\n        fullWidth\r\n        onChange={(e) => handleDateChange(e, 'dateStart')}\r\n      />\r\n      <KeyboardDatePicker\r\n        inputVariant=\"outlined\" \r\n        size={size}\r\n        disableToolbar\r\n        variant=\"inline\"\r\n        format=\"dd.MM.yyyy\"\r\n        margin=\"normal\"\r\n        label={dateEndLabel}\r\n        autoOk={true}\r\n        value={dateEnd}\r\n        fullWidth\r\n        onChange={(e) => handleDateChange(e, 'dateEnd')}\r\n      />\r\n    </MuiPickersUtilsProvider>)\r\n}","import React, { useState } from 'react';\r\n\r\nimport { useAuth } from '../../context/auth.js';\r\nimport Calendar from '../../reusable/Calendar.js';\r\nimport formatService from '../../services/formatService.js';\r\nimport ComponentAvailability from '../../reusable/ComponentAvailability.js';\r\nimport { notify } from '../../reusable/Notification.js';\r\n\r\nimport {\r\n  makeStyles,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Checkbox,\r\n  IconButton,\r\n  Box,\r\n  Collapse\r\n} from '@material-ui/core';\r\nimport Confirmation from '../../reusable/Confirmation.js';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  accordionRoot: {\r\n    '&.Mui-focused': {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  accordion: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'hidden',\r\n    '& .arrow-icon': {\r\n      transform: 'rotate(-90deg)',\r\n      transition: 'transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\r\n    },\r\n    '&.Mui-expanded .arrow-icon': {\r\n      transform: 'rotate(0deg)',\r\n      transition: 'transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\r\n    }\r\n  },\r\n  taskHeader: {\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    whiteSpace: 'nowrap'\r\n  },\r\n  additionalInfo: {\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    whiteSpace: 'nowrap',\r\n    justifyContent: 'space-between',\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  taskDescription : {\r\n    minWidth: 0,\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  heading: {\r\n    flex: 1,\r\n    minWidth: 0,\r\n    display: 'inline-block',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  headingInput: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  calendar: {\r\n    display: 'flex'\r\n  },\r\n  deadlines: {\r\n    minWidth: '100%'\r\n  },\r\n  createdDate: {\r\n    marginLeft: 'auto'\r\n  },\r\n}));\r\n\r\nconst TaskComponent = ({ taskObj, expService, planStage, removeTask }) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\r\n  const [editing, setEditMode] = useState(false);\r\n  const [expandAccordion, setExpandAccordion] = useState(false);\r\n  const [task, setTask] = useState(taskObj);\r\n  const [initialTask, setInitialTask] = useState(taskObj);\r\n  const user = useAuth()\r\n\r\n  const stageRoleModel = {\r\n    checkBox: {\r\n      supervisor: [1, 3],\r\n      employee: [2]\r\n    },\r\n    editBtn: {\r\n      supervisor: [1],\r\n      employee: [0]\r\n    },\r\n    deleteBtn: {\r\n      supervisor: [1],\r\n      employee: [0]\r\n    },\r\n  }\r\n\r\n  const updateTaskField = (fieldName, value) => {\r\n    setTask(prevData => {\r\n      return {\r\n        ...prevData,\r\n        [fieldName]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleCheckbox = (e) => {\r\n    expService.update('task', task.id, {\r\n      ...task,\r\n      completed: e.target.checked\r\n    })\r\n      .then(res => {\r\n        res.completed\r\n          ? notify('success', 'Задача отмечена как выполненная.')\r\n          : notify('success', 'Задача отмечена как невыполненная.');\r\n        updateTaskField('completed', res.completed);\r\n      })\r\n      .catch(() => {\r\n        notify('error', 'Ошибка при изменении статуса задачи.');\r\n      });\r\n  }\r\n  \r\n  const handleEditIconClick = (e) => {\r\n    e.stopPropagation();\r\n    setTask(initialTask);\r\n    setEditMode(!editing);\r\n    setExpandAccordion(true);\r\n  }\r\n\r\n  \r\n  const handleConfirmationOpen = (event) => {\r\n    setConfirmationOpen(true);\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const deleteTask = id => {\r\n    expService.remove('task', id)\r\n      .then(() => {\r\n        removeTask();\r\n      })\r\n      .catch(() => {\r\n        notify('error', 'Ошибка при удалении задачи.');\r\n      });\r\n  }\r\n\r\n  const handleInputChange = (fieldName, e) => {\r\n    e.persist();\r\n    e.stopPropagation();\r\n    updateTaskField(fieldName, e.target.value);\r\n  }\r\n\r\n  const handleDateChange = (dateType, value) => {\r\n    dateType = (dateType === 'dateStart') ? 'executionStart' : 'executionEnd';\r\n    updateTaskField(dateType, value.toJSON());\r\n  }\r\n\r\n  const handleSaveBtn = () => {\r\n    setEditMode(!editing);\r\n    setInitialTask(task);\r\n    expService.update('task', task.id, task)\r\n      .then(() => {\r\n        notify('success', 'Задача изменена.');\r\n      })\r\n      .catch(() => {\r\n        notify('error', 'Ошибка при изменении задачи.');\r\n      });\r\n  }\r\n\r\n  const handleAccordionHeadClick = () => {\r\n    setExpandAccordion(!expandAccordion)\r\n    setTask(initialTask);\r\n    setEditMode(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Confirmation \r\n        isOpen={confirmationOpen}\r\n        setIsOpen={setConfirmationOpen}\r\n        message='Вы уверены, что хотите удалить задачу?'\r\n        deletedId={task.id}\r\n        action={deleteTask}\r\n      />\r\n      <Accordion elevation={2} expanded={expandAccordion}>\r\n        <AccordionSummary\r\n          classes={{ content: classes.accordion, root: classes.accordionRoot }}\r\n          onClick={handleAccordionHeadClick}\r\n        >\r\n          <div className={classes.taskHeader}>\r\n            <Box color=\"text.secondary\">\r\n            <ExpandMoreIcon classes={{ root: classes.taskArrowIcon }} className=\"arrow-icon\" />\r\n            </Box>\r\n            {editing ?\r\n              <TextField\r\n                multiline\r\n                rowsMax={2}\r\n                variant='outlined'\r\n                size='small'\r\n                className={classes.headingInput}\r\n                value={task.name}\r\n                onChange={(e) => handleInputChange(\"name\", e)}\r\n                onClick={(e) => e.stopPropagation()}\r\n                fullWidth\r\n              />\r\n              : <Typography className={classes.heading}>{task.name}</Typography>}\r\n              <ComponentAvailability\r\n                stageRoleObj={stageRoleModel.checkBox}\r\n                currentRole={user.role}\r\n                currentStage={planStage}\r\n              >\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  checked={task.completed}\r\n                  onChange={handleCheckbox}\r\n                  onClick={(e) => e.stopPropagation()}\r\n                />\r\n              </ComponentAvailability>\r\n              <ComponentAvailability\r\n                stageRoleObj={stageRoleModel.editBtn}\r\n                currentRole={user.role}\r\n                currentStage={planStage}\r\n              >\r\n                <IconButton onClick={(e) => handleEditIconClick(e)}>\r\n                  {editing\r\n                    ? <CloseIcon />\r\n                    : <EditIcon />}\r\n                </IconButton>\r\n              </ComponentAvailability>\r\n              <ComponentAvailability\r\n                stageRoleObj={stageRoleModel.deleteBtn}\r\n                currentRole={user.role}\r\n                currentStage={planStage}\r\n              >\r\n                <IconButton  onClick={(e) => handleConfirmationOpen(e)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </ComponentAvailability>\r\n          </div>\r\n          {!expandAccordion &&\r\n            <Box className={classes.additionalInfo}>\r\n              <Typography className={classes.taskDescription} color=\"textSecondary\">\r\n                {task.description}\r\n              </Typography>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"body2\"\r\n              >\r\n                до {formatService.setDate(task.executionEnd).slice(0, 5)}\r\n              </Typography>\r\n            </Box>\r\n          }\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container direction='row' justify='flex-end' alignItems='center' spacing={1}>\r\n            <Grid item xs={12}>\r\n                {editing\r\n                  ? <TextField\r\n                      variant='outlined'\r\n                      fullWidth\r\n                      multiline\r\n                      rows={2}\r\n                      rowsMax={5}\r\n                      value={task.description}\r\n                      onChange={(e) => handleInputChange(\"description\", e)}\r\n                    />\r\n                  : <Typography flex={1} color=\"textSecondary\" gutterBottom>\r\n                      {task.description}\r\n                    </Typography>}\r\n              </Grid>\r\n              {editing\r\n                ? <Grid className={classes.deadlines} item xs={12}>\r\n                <Box className={classes.calendar}>\r\n                  <Calendar\r\n                    passChanges={handleDateChange}\r\n                    dateStart={task.executionStart}\r\n                    dateStartLabel=\"С\"\r\n                    dateEnd={task.executionEnd}\r\n                    dateEndLabel=\"До\"\r\n                  />\r\n                </Box> \r\n              </Grid>\r\n                : null\r\n              }\r\n              \r\n              <Grid item xs={12} container justify='space-between'>\r\n              {!editing\r\n                ? <Grid item xs={12} sm={9}>\r\n                    <Typography\r\n                      color=\"textSecondary\"\r\n                      variant=\"body2\" >\r\n                      Срок: с {formatService.setDate(task.executionEnd)} до {formatService.setDate(task.executionEnd)}\r\n                    </Typography>\r\n                  </Grid>\r\n                : null\r\n              }\r\n              <Grid className={classes.createdDate} xs={12} item sm={3}>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body2\">\r\n                  Создана {formatService.setDate(task.date)}\r\n                </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Collapse in={editing} >\r\n                <Grid item container justify='flex-end' xs={12}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    type=\"Submit\"\r\n                    onClick={handleSaveBtn}\r\n                  >\r\n                    Сохранить\r\n                  </Button>\r\n                </Grid>\r\n              </Collapse>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskComponent;","import React, { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  FormControl,\r\n  Select,\r\n  MenuItem\r\n}\r\n  from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport locale from \"date-fns/locale/ru\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport { useExpService } from '../../context/expService.js';\r\nimport Notification, { notify } from '../../reusable/Notification.js';\r\n\r\nconst TaskCreationForm = ({ tasks, setTasks, open, plan, toggleCreationForm }) => {\r\n  const exposureService = useExpService();\r\n  const [name, setName] = useState('');\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n  const [description, setDescription] = useState('');\r\n  const [executionStart, setExecutionStart] = useState(new Date());\r\n  const [executionEnd, setExecutionEnd] = useState(new Date(plan.adaptationEnd));\r\n\r\n  const handleChangeName = event => setName(event.target.value);\r\n  const handleChangeDescription = event => setDescription(event.target.value);\r\n  const handleChangeExecutionStart = date => setExecutionStart(date);\r\n  const handleChangeExecutionEnd = date => setExecutionEnd(date);\r\n\r\n  const handleChangeIsCompleted = (event) => {\r\n    setIsCompleted(event.target.value);\r\n  };\r\n\r\n  const addTask = (event) => {\r\n    event.preventDefault();\r\n    const taskObject =\r\n    {\r\n      name,\r\n      description,\r\n      executionStart,\r\n      executionEnd,\r\n      plan: plan.id,\r\n      completed: isCompleted\r\n    };\r\n\r\n    exposureService\r\n      .create('task', taskObject)\r\n      .then(createdTask => {\r\n        setName('');\r\n        setDescription('');\r\n        setExecutionStart(new Date());\r\n        setExecutionEnd(new Date());\r\n        setTasks(tasks.concat(createdTask));\r\n        toggleCreationForm();\r\n        notify('success', 'Задача была успешно создана.');\r\n      })\r\n      .catch(error => {\r\n        notify('error', 'Ошибка при создании задачи.');\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={toggleCreationForm}>\r\n        <Box p=\"2rem\">\r\n          <form onSubmit={addTask}>\r\n            <Grid container spacing={2} justify='flex-end' >\r\n              <Grid item xs={12} container justify='space-between'>\r\n                <Typography variant=\"h6\">Создание задачи</Typography>\r\n                <IconButton size=\"small\" onClick={toggleCreationForm} >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label='Название задачи'\r\n                  variant=\"outlined\"\r\n                  value={name}\r\n                  onChange={handleChangeName}\r\n                  fullWidth\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label='Описание задачи'\r\n                  variant=\"outlined\"\r\n                  value={description}\r\n                  onChange={handleChangeDescription}\r\n                  fullWidth\r\n                  multiline\r\n                  rows={4}\r\n                />\r\n              </Grid>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={locale}>\r\n                <Grid item sm={6} xs={12}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd.MM.yyyy\"\r\n                    label=\"Дата начала\"\r\n                    value={executionStart}\r\n                    onChange={handleChangeExecutionStart}\r\n                    autoOk={true}\r\n                    fullWidth\r\n                    required\r\n                    inputVariant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item sm={6} xs={12}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd.MM.yyyy\"\r\n                    label=\"Дата окончания\"\r\n                    value={executionEnd}\r\n                    onChange={handleChangeExecutionEnd}\r\n                    autoOk={true}\r\n                    inputVariant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </MuiPickersUtilsProvider>\r\n              <Grid item xs={12}>\r\n                <FormControl variant=\"outlined\" fullWidth>\r\n                  <Select value={isCompleted} onChange={handleChangeIsCompleted}>\r\n                    <MenuItem value={false}>Не выполнена</MenuItem>\r\n                    <MenuItem value={true}>Выполнена</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"Submit\"\r\n                  fullWidth>\r\n                  Создать\r\n              </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Box>\r\n      </Dialog>\r\n      <Notification />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskCreationForm;","import React from 'react';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\n\r\nexport default function Loader({size}) {\r\n\r\n  return (\r\n    <Grid container justify='center'>\r\n      <CircularProgress size={size} />\r\n    </Grid>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useAuth } from '../../context/auth.js';\r\n\r\nimport TaskComponent from './TaskComponent.js';\r\nimport TaskCreationForm from './TaskCreationForm.js';\r\nimport Loader from '../../reusable/Loader.js';\r\nimport ComponentAvailability from '../../reusable/ComponentAvailability.js';\r\n\r\nimport { Typography, Box, Button, makeStyles } from '@material-ui/core';\r\nimport { useExpService } from '../../context/expService.js';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: 170\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  button: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: theme.palette.primary.main,\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  errorBoundary: {\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    backgroundColor: '#c23934',\r\n  },\r\n  errorText: {\r\n    color: 'white'\r\n  }\r\n}));\r\n\r\nconst TasksBlock = ({ planObj }) => {\r\n  const expService = useExpService();\r\n  const classes = useStyles();\r\n  const [tasks, setTasks] = useState(null);\r\n  const [onCreation, setOnCreation] = useState(false);\r\n  const user = useAuth();\r\n\r\n\r\n  const stageRoleModel = {\r\n    createTaskBtn: {\r\n      supervisor: [1],\r\n      employee: [0]\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    expService.getAllTasksFromPlan(planObj.id)\r\n      .then(tasks => setTasks(tasks));\r\n  }, [planObj, expService]);\r\n\r\n  const toggleCreationForm = () => setOnCreation(onCreation => !onCreation);\r\n\r\n  const removeTask = (i) => {\r\n    setTasks(prevTasks => prevTasks.filter((item, indx) => indx !== i))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Box className={classes.header}>\r\n          <Typography variant='h5'>\r\n            Задачи\r\n          </Typography>\r\n          <ComponentAvailability\r\n            stageRoleObj={stageRoleModel.createTaskBtn}\r\n            currentRole={user.role}\r\n            currentStage={planObj.stage}\r\n          >\r\n            <Button\r\n              onClick={toggleCreationForm}\r\n              className={classes.button}>\r\n              Создать\r\n            </Button>\r\n        </ComponentAvailability>\r\n      </Box>\r\n      {tasks ?\r\n        tasks.map((item, index) => {\r\n          return <TaskComponent key={item.id} expService={expService} taskObj={item} planStage={planObj.stage} removeTask={() => removeTask(index)} />\r\n        })\r\n        : <Loader size={50} />\r\n      }\r\n      <TaskCreationForm\r\n        tasks={tasks}\r\n        setTasks={setTasks}\r\n        toggleCreationForm={toggleCreationForm}\r\n        open={onCreation} \r\n        plan={planObj}\r\n        />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TasksBlock;","import React from 'react';\r\nimport {\r\n  ListItem,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport format from '../../services/formatService.js';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n  },\r\n  author: {\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis'\r\n  },\r\n  date: {\r\n    marginLeft: 'auto'\r\n  }\r\n}));\r\n\r\nconst Comment = ({ data : { content, user, date }}) => {\r\n  const classes = useStyles();\r\n\r\n  const commentAuthor = () => (\r\n    `${format.setShortName(user.name)}  \r\n    (${format.capitalizeFirstLetter(format.getRole(user.role))})`);\r\n  \r\n    const commentDate = () => format.setDate(date);\r\n\r\n  return (\r\n    <ListItem className={classes.root}>\r\n      <Typography className={classes.author} variant='subtitle1'>\r\n        {commentAuthor()}\r\n      </Typography>\r\n      <Typography>\r\n        {content}\r\n      </Typography>\r\n      <Typography className={classes.date} variant='subtitle1'>\r\n        {commentDate()}\r\n      </Typography>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Comment;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  List,\r\n  Paper,\r\n  makeStyles,\r\n  Typography,\r\n  TextField,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport Loader from '../../reusable/Loader.js';\r\n\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { useExpService } from '../../context/expService.js';\r\nimport Comment from './Comment.js';\r\nimport Notification, { notify } from '../../reusable/Notification.js';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  commentList: {\r\n    overflow: 'auto',\r\n    maxHeight: 270,\r\n  },\r\n  commentForm: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n\r\n  },\r\n  sendBtn: {\r\n    marginLeft: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst CommentBlock = ({ planId }) => {\r\n  const classes = useStyles();\r\n  const [comments, setComments] = useState(null);\r\n  const [text, setText] = useState('');\r\n  const expService = useExpService();\r\n\r\n  useEffect(() => {\r\n    expService\r\n      .getAllCommentsFromPlan(planId)\r\n      .then(comments => setComments(comments));\r\n  }, [expService, planId]);\r\n\r\n  const handleCommentChange = (e) => setText(e.target.value);\r\n\r\n  const onSendClick = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newComment = {\r\n        content: text,\r\n        plan: planId\r\n      };\r\n      const createdComment = await expService.create('comment', newComment);\r\n      console.log(createdComment)\r\n      setComments(comments => comments.concat(createdComment));\r\n      setText('');\r\n    } catch (e) {\r\n      notify('error', 'Ошибка при отправке комментария.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography className={classes.title} variant='h5'>\r\n        Комментарии {comments ? `(${comments.length})` : ''}\r\n      </Typography>\r\n      <Paper className={classes.root} elevation={2}>\r\n        {comments ?\r\n          <List className={classes.commentList}>\r\n            {comments.map(comment => <Comment key={comment.id} data={comment} />)}\r\n          </List>\r\n          : <Loader size={50} />}\r\n        <form className={classes.commentForm} onSubmit={onSendClick}>\r\n          <TextField\r\n            value={text}\r\n            onChange={handleCommentChange}\r\n            size='small'\r\n            variant='outlined'\r\n            fullWidth\r\n            placeholder='Введите ваш комментарий...' />\r\n          <IconButton type='submit' className={classes.sendBtn}>\r\n            <SendIcon color='primary' />\r\n          </IconButton>\r\n        </form>\r\n        <Notification />\r\n      </Paper>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default CommentBlock;","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport AdaptationPlanCard from '../components/PlanDetails/AdaptationPlanCard.js';\r\nimport TasksBlock from '../components/TaskBlock/TasksBlock.js';\r\nimport CommentBlock from '../components/CommentBlock/CommentBlock.js';\r\nimport ActionButton from '../reusable/ActionButton.js';\r\nimport { useExpService } from '../context/expService.js';\r\nimport { useAuth } from '../context/auth.js';\r\nimport role from '../utils/role.js';\r\nimport loaderHoc from '../reusable/HocLoader.js';\r\nimport ErrorBoundary from '../reusable/ErrorBoundary.js';\r\n\r\n\r\nimport { Grid, makeStyles, Box, IconButton, Typography } from '@material-ui/core';\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\n\r\nimport Confirmation from '../reusable/Confirmation.js';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  sendButtonsBox: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2)\r\n  },\r\n  cardHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: theme.spacing(1),\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nconst PlanDetailsPage = () => {\r\n  const expService = useExpService();\r\n  const [planId] = useState(useParams().id);\r\n  const [plan, setPlan] = useState(null);\r\n  const user = useAuth();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [isNextStage, setIsNextStage] = useState(false);\r\n  const [isPreviousStage, setIsPreviousStage] = useState(false);\r\n\r\n  const handleSwitchForward = () => setIsNextStage(true);\r\n  const handleSwitchBack = () => setIsPreviousStage(true);\r\n\r\n  useEffect(() => {\r\n    expService\r\n      .get('plan', planId)\r\n      .then(plan => setPlan(plan));\r\n  }, [expService, planId]);\r\n\r\n  const getSendButtonText = (stage, direction) => {\r\n    const maps = {\r\n      0: 'На заполнение',\r\n      1: 'На согласование',\r\n      2: 'На выполнение',\r\n      3: 'На оценку',\r\n      4: 'Завершить оценку'\r\n    };\r\n\r\n    const buttonText = (direction === 'backward')\r\n      ? (`${maps[stage - 1]}`)\r\n      : (`${maps[stage + 1]}`);\r\n\r\n    return buttonText;\r\n  };\r\n\r\n  const handleForwardClick = async () => {\r\n    const newPlan = {\r\n      ...plan,\r\n      employeePosition: plan.employeePosition.id,\r\n      hr: plan.hr.id,\r\n      employee: plan.employee.id,\r\n      supervisor: plan.supervisor.id,\r\n      stage: ++plan.stage\r\n    };\r\n    const updatedPlan = await expService.update('plan', planId, newPlan);\r\n    setPlan(updatedPlan);\r\n  };\r\n\r\n  const handleBackwardClick = async () => {\r\n    const newPlan = {\r\n      ...plan,\r\n      employeePosition: plan.employeePosition.id,\r\n      hr: plan.hr.id,\r\n      employee: plan.employee.id,\r\n      supervisor: plan.supervisor.id,\r\n      stage: --plan.stage\r\n    };\r\n    const updatedPlan = await expService.update('plan', planId, newPlan);\r\n    setPlan(updatedPlan);\r\n  };\r\n\r\n  const allowedToForward = () => {\r\n    const permissions = {\r\n      [role.employee]: [1, 0, 1, 0, 0],\r\n      [role.supervisor]: [0, 1, 0, 1, 0],\r\n      [role.hr]: [1, 1, 1, 1, 0],\r\n    };\r\n    return Boolean(permissions[user.role][plan.stage])\r\n  };\r\n\r\n  const allowedToBackward = () => {\r\n    const permissions = {\r\n      [role.employee]: [0, 0, 0, 0, 0],\r\n      [role.supervisor]: [0, 1, 0, 1, 0],\r\n      [role.hr]: [0, 1, 1, 1, 1],\r\n    };\r\n    return Boolean(permissions[user.role][plan.stage])\r\n  };\r\n\r\n  const AdapPlan = loaderHoc(\r\n    AdaptationPlanCard,\r\n    plan\r\n  );\r\n\r\n  const handleBackIconClick = () => {\r\n    history.replace('/plans/');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Grid item>\r\n            <Box className={classes.cardHeader}>\r\n              <IconButton size='small' edge='end' color=\"inherit\" onClick={handleBackIconClick}>\r\n                <KeyboardBackspaceIcon />\r\n              </IconButton>\r\n              <Typography variant='h5'>\r\n                Адаптационный план\r\n              </Typography>\r\n            </Box>\r\n            <AdapPlan setDisplayPlan={setPlan} />\r\n          </Grid>\r\n          <Grid item>\r\n            <ErrorBoundary>\r\n              <CommentBlock planId={planId} />\r\n            </ErrorBoundary>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <ErrorBoundary>\r\n            {plan &&\r\n              <TasksBlock planObj={plan} />}\r\n          </ErrorBoundary>\r\n        </Grid> \r\n      </Grid>\r\n      {plan &&\r\n        <Box className={classes.sendButtonsBox}>\r\n          {allowedToBackward()\r\n            ? <ActionButton\r\n              type='backward'\r\n              handler={handleSwitchBack}\r\n              text={getSendButtonText(plan.stage, 'backward')} />\r\n            : null}\r\n          {allowedToForward()\r\n            ? <ActionButton\r\n              type='forward'\r\n              handler={handleSwitchForward}\r\n              text={getSendButtonText(plan.stage, 'forward')} />\r\n            : null}\r\n        </Box>}\r\n      <Confirmation\r\n        isOpen={isNextStage}\r\n        setIsOpen={setIsNextStage}\r\n        message='Вы уверены, что хотите отправить план на следующий этап?'\r\n        action={handleForwardClick}\r\n        buttonText='да'\r\n      />\r\n      <Confirmation\r\n        isOpen={isPreviousStage}\r\n        setIsOpen={setIsPreviousStage}\r\n        message='Вы уверены, что хотите отправить план на предыдущий этап?'\r\n        action={handleBackwardClick}\r\n        buttonText='да'\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlanDetailsPage;","import React from 'react';\r\nimport {\r\n  Button,\r\n  Typography,\r\n  makeStyles,\r\n  Card,\r\n  CardActions,\r\n  CardContent\r\n} from '@material-ui/core';\r\nimport format from '../../services/formatService.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 'auto'\r\n  },\r\n  name: {\r\n    fontWeight: 500\r\n  },\r\n  logoutBtn: {\r\n    marginLeft: 'auto'\r\n  }\r\n}));\r\n\r\nconst UserCard = ({ user, handleLogoutClick }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.name} gutterBottom>\r\n          {user.name}\r\n        </Typography>\r\n        <Typography className={classes.role} variant='subtitle1'>\r\n          {format.capitalizeFirstLetter(format.getRole(user.role))}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          className={classes.logoutBtn}\r\n          size='small'\r\n          color='primary'\r\n          onClick={handleLogoutClick}>\r\n          Выйти\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserCard;","import React, { useState } from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Button,\r\n  Typography,\r\n  makeStyles,\r\n  fade,\r\n  InputBase,\r\n  useScrollTrigger, \r\n  Slide,\r\n  Hidden,\r\n  Popover } from '@material-ui/core';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport UserCard from './UserCard.js';\r\nimport { useAuth } from '../../context/auth.js';\r\nimport storage from '../../utils/storage.js';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useHistory, Link, useRouteMatch  } from 'react-router-dom';\r\nimport format from '../../services/formatService.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  toolbar: {\r\n    flexWrap: \"wrap\"\r\n  },\r\n  logo: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  name: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  search: {\r\n    minWidth: '20%',\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    margin: theme.spacing(0, 2)\r\n\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n  },\r\n  button: {\r\n    marginLeft: \"auto\"\r\n  },\r\n  appName: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textDecoration: 'none',\r\n    color: theme.palette.primary.contrastText\r\n  }\r\n}));\r\n\r\nconst HideOnScroll = ({ children }) => {\r\n  const trigger = useScrollTrigger();\r\n  return (\r\n    <Slide appear={false} direction='down' in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n};\r\n\r\nconst Header = ({ setUser, setSearch }) => {\r\n  const classes = useStyles();\r\n  const userData = useAuth();\r\n  const history = useHistory();\r\n  const match = useRouteMatch('/plans/');\r\n  let isShowing = null;\r\n  if (match)\r\n   isShowing = match.isExact;\r\n\r\n  const [ anchorEl, setAnchorEl ] = useState(null);\r\n\r\n  const handleNameClick = e => setAnchorEl(e.currentTarget);\r\n\r\n  const handleCardClose = () => setAnchorEl(null);\r\n\r\n  const popoverOpen = Boolean(anchorEl);\r\n\r\n  const handleLogoutClick = () => {\r\n    storage.remove('savedUser');\r\n    setUser(null);\r\n    history.replace('/login');\r\n  };\r\n  const handleSearchChange = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <HideOnScroll>\r\n      <AppBar elevation={1} className={classes.root} color='primary' position='sticky'>\r\n        <Toolbar className={classes.toolbar}>\r\n          <Link to='/' className={classes.appName}>\r\n            <Hidden xsDown>\r\n              <EmojiPeopleIcon className={classes.logo} />\r\n            </Hidden>\r\n            <Hidden smDown>\r\n              <Typography variant='h6'>\r\n                Exposure App\r\n              </Typography>\r\n            </Hidden>\r\n          </Link>\r\n          {isShowing &&\r\n            <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n            onChange={handleSearchChange}\r\n            placeholder=\"Поиск\"\r\n            classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n          />\r\n          </div>}\r\n          <Button\r\n            onClick={handleNameClick}\r\n            color='inherit'\r\n            className={classes.button}\r\n            startIcon={<AccountCircle />}>\r\n            <Hidden xsDown>\r\n              {format.setShortName(userData.name)}\r\n            </Hidden>\r\n          </Button>\r\n          <Popover\r\n            elevation={2}\r\n            anchorEl={anchorEl}\r\n            open={popoverOpen}\r\n            onClose={handleCardClose}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}>\r\n            <UserCard handleLogoutClick={handleLogoutClick} user={userData} />\r\n          </Popover>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </HideOnScroll>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport {\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  makeStyles,\r\n  createMuiTheme,\r\n  ThemeProvider\r\n} from '@material-ui/core';\r\n\r\nimport exposureService from './services/exposureService.js';\r\nimport loginService from './services/loginService.js';\r\nimport storage from './utils/storage.js';\r\nimport role from './utils/role.js';\r\nimport { AuthContext } from './context/auth.js';\r\nimport { ExpServiceContext } from './context/expService.js';\r\nimport PrivateRoute from './helpers/PrivateRoute.js';\r\nimport Distributor from './helpers/Distributor.js';\r\nimport AuthPage from './pages/AuthPage.js';\r\nimport PlanListPage from './pages/PlanListPage.js';\r\nimport PlanDetailsPage from './pages/PlanDetailsPage.js';\r\nimport Header from './components/Header/Header.js';\r\nimport ErrorBoundary from './reusable/ErrorBoundary.js';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    fontFamily: 'Roboto',\r\n    fontSize: 18\r\n  }\r\n});\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    common: {\r\n      white: '#ffffff'\r\n    },\r\n    primary: {\r\n      main: '#5c6bc0',\r\n      contrastText: 'white'\r\n    },\r\n    secondary: {\r\n      main: '#e63212'\r\n    },\r\n  },\r\n  typography: {\r\n    subtitle1: {\r\n      color: '#838383',\r\n      fontSize: 14,\r\n    },\r\n    h5: {\r\n      paddingLeft: 15,\r\n      fontWeight: 500,\r\n      lineHeight: 2,\r\n      fontSize: 18,\r\n    }\r\n  }\r\n});\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(storage.get('savedUser'));\r\n  const [search, setSearch] = useState('');\r\n\r\n  const { root } = useStyles();\r\n\r\n  return (\r\n    <ExpServiceContext.Provider value={exposureService}>\r\n      <ErrorBoundary>\r\n        <AuthContext.Provider value={user}>\r\n          <ThemeProvider theme={theme}>\r\n            {user\r\n              ? <Header\r\n                setUser={setUser}\r\n                setSearch={setSearch}\r\n              />\r\n              : null}\r\n            <Container className={root}>\r\n              <Switch>\r\n                <Route path='/login'>\r\n                  <AuthPage\r\n                    setUser={setUser}\r\n                    loginService={loginService} />\r\n                </Route>\r\n                <PrivateRoute exact path='/plans/' roles={[role.hr, role.supervisor]}>\r\n                  <PlanListPage search={search} />\r\n                </PrivateRoute>\r\n                <PrivateRoute path='/plans/:id'>\r\n                  <PlanDetailsPage />\r\n                </PrivateRoute>\r\n                <Route path='/'>\r\n                  <Distributor />\r\n                </Route>\r\n                <Redirect to='/' />\r\n              </Switch>\r\n            </Container>\r\n          </ThemeProvider>\r\n        </AuthContext.Provider>\r\n      </ErrorBoundary>\r\n    </ExpServiceContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './App.js';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}